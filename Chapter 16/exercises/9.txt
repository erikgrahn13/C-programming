a)
    struct color make_color(int red, int green, int blue)
    {
        if(red < 0) red = 0;
        else if(red > 255) red = 255;

        if(green < 0) green = 0;
        else if(green > 255) green = 255;

        if(blue < 0) blue = 0;
        else if(blue > 255) blue = 255;

        return (struct color){red, green, blue};
    }

b)
    int getRed(struct color c)
    {
        return c.red;
    }

c)
    bool equaL_color(struct color color1, struct color color2)
    {
        return (color1.red == color2.red && color1.green == color2.green && color1.blue == color2.blue)? true:false;
    }

d)
    struct color brighter(struct color c)
    {
        if(c.red == 0 && c.green == 0 && c.blue == 0)
        {
            c.red = 3;
            c.green = 3;
            c.blue = 3;

            return (struct color){c.red, c.green, c.blue};
        }
        
        if(c.red >0 && c.red < 3) c.red = 3;
        if(c.green >0 && c.green < 3) c.green = 3;
        if(c.blue >0 && c.blue < 3) c.blue = 3;

        if(c.red / 0.7 > 255) c.red = 255; else c.red /= 0.7;
        if(c.green / 0.7 > 255) c.green = 255; else c.green /= 0.7;
        if(c.blue / 0.7 > 255) c.blue = 255; else c.blue /= 0.7;

        return (struct color){c.red, c.green, c.blue};
            
    }

e)

struct color darker(struct color c)
{
    return (struct  color){(int)c.red*0.7, (int)c.green*0.7, (int)c.blue*0.7};
}